steps:

  - id: Unit Tests
    name: python:3.9-buster
    entrypoint: bash
    args:
    - '-c'
    - |
        # Substitute tag name / version
        sed -i 's/%VERSION%/'$TAG_NAME'/g' setup.cfg

        # Install dependencies
        pip install -r requirements.txt --user

        # Execute build workflow
        python -m tox

        # Capture test results
        cp coverage/junit.xml ${SHORT_SHA}_test_log.xml

  - id: Publish Test Results
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: bash
    args:
    - '-c'
    - |
        if [ $PROJECT_ID == "alexei-dev" ]
        then
          echo "${_LOG_BUCKET_DEV}" > log_bucket
        fi

        if [ $PROJECT_ID == "alexei-qa" ]
        then
          echo "${_LOG_BUCKET_QA}" > log_bucket
        fi

        if [ $PROJECT_ID == "alexei-prod" ]
        then
          echo "${_LOG_BUCKET_PROD}" > log_bucket
        fi

        echo "Establishing test results..."
        echo ${SHORT_SHA}_test_log.xml

        echo "Establishing logs bucket..."
        _LOG_BUCKET=$(cat log_bucket)
        echo "$${_LOG_BUCKET}"

        echo "Publishing test results..."
        gsutil cp ${SHORT_SHA}_test_log.xml gs://$${_LOG_BUCKET}

  - id: Establish Library Registry
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    entrypoint: bash
    args:
    - '-c'
    - |
        if [ $PROJECT_ID == "alexei-dev" ]
        then
          echo "${_LIBRARY_REGISTRY_DEV}" > release_registry
        fi

        if [ $PROJECT_ID == "alexei-qa" ]
        then
          echo "${_LIBRARY_REGISTRY_QA}" > release_registry
        fi

        if [ $PROJECT_ID == "alexei-prod" ]
        then
          echo "${_LIBRARY_REGISTRY_PROD}" > release_registry
        fi

        echo "Establishing release repository..."
        _LIBRARY_REGISTRY=$(cat release_registry)
        echo "$${_LIBRARY_REGISTRY}"

  - id: Publish Release
    name: python:3.9-buster
    entrypoint: bash
    args:
    - '-c'
    - |
        echo "Publishing release..."
        echo "Registry: $${_LIBRARY_REGISTRY}"
        twine upload --repository-url "$${_LIBRARY_REGISTRY}" dist/*

substitutions:

  _LOG_BUCKET_DEV: logs-hmjbvyp8eqyefrh
  _LOG_BUCKET_QA: logs-j4tztbeljefbpvo
  _LOG_BUCKET_PROD: logs-nfrjp2w3vyrt9xp

  _LIBRARY_REGISTRY_DEV: https://us-python.pkg.dev/alexei-dev/libraries/
  _LIBRARY_REGISTRY_QA: https://us-python.pkg.dev/alexei-qa/libraries/
  _LIBRARY_REGISTRY_PROD: https://us-python.pkg.dev/alexei-prod/libraries/
